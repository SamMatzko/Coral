initSidebarItems({"fn":[["get_datetime","Return a [`DateTime`] instance representing the creation, modification, or access time of `path` according to `date_type`."],["get_epoch_secs_access","Return the access date and time of `path` as the number of seconds since the UNIX epoch."],["get_epoch_secs_creation","Return the creation date and time of `path` as the number of seconds since the UNIX epoch."],["get_epoch_secs_modified","Return the modification date and time of `path` as the number of seconds since the UNIX epoch."],["get_new_date_path","Move `file` into a set of directories in yyyy/mm/ format according to its creation time. "],["get_sequential_name","Return a [`File`] representing the renamed version of `path`."],["get_sorting_results","The main sorting algorithm; this checks files for validity and shows the progress bar."],["is_sortable","Return [`true`] if:"],["is_type","Return [`true`] if `path`’s type is one of the types in `types`. “Type” refers to the file extension, as in `\"jpg\"`, `\"png\"`, etc."],["sort","The main sort function used by the command-line interface. Each parameter corresponds with the parameter in [`get_sorting_results`] of the same name, with the exception of `dry_run`."],["sort_dry_run","Print the intended sort, without acutally sorting. Each parameter corresponds with the parameter in [`get_sorting_results`] with the same name."],["sort_from_json","Sort according to configuration data in JSON [`String`] `json`. `source` and `target` correspond with the same-name parameters in [`get_sorting_results`]. See [`crate::structs::ConfigData`] for more information on JSON configuration."]]});